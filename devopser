#!/usr/bin/env ruby

require 'clamp'

# Set working dir
Dir.chdir(__dir__)

COMPOSES = 'composes'
VAGRANTS = 'vagrants'

Clamp do
  banner ['-' * 20, ' Devop for pleasure', '-' * 20].join "\n"

  subcommand ['docker', 'dc'], 'Run docker-compose for a set of services' do
    subcommand ['list', 'l'], 'Show all existing dockerized service-sets' do
      def execute
        puts list COMPOSES
      end
    end
    subcommand ['run', 'r'], 'Run docker-compose command' do
      parameter 'SRV', "specific service-set" do |srv|
        raise ArgumentError, 'Unknown service. Run list command' unless valid_item?(srv, 'composes')
        srv
      end
      parameter 'COMPOSE_COMMANDS ...', "docker-compose commands ", attribute_name: :cmds
      def execute
        Dir.chdir("#{COMPOSES}/#{srv}") do
          system('docker-compose', *cmds)
        end
      end
    end
  end

  subcommand 'vm', 'Run specified virtual machine' do
    subcommand ['list', 'l'], 'Show all existing VMs' do
      def execute
        puts list VAGRANTS
      end
    end
  end

  option ['-v', '--version'], :flag, 'Show version' do
    puts '0.1.0'
    exit(0)
  end

  private

  def list(dir)
    Dir.chdir(dir) do
      Dir.glob('*')
    end
  end

  def valid_item?(item, in_dir)
    list(in_dir).include? item
  end
end
